@page "/inv-stock-receive-list"

@using BulkUpload.DataModel.Inventory
@using BulkUpload.Repository.Interface
@using OfficeOpenXml

@inject IJSRuntime JS
@inject IStockReceiveService StockReceiveService

<PageTitle>Stock Receive List</PageTitle>

<h3>Stock Receive </h3>


<div class="container mt-3">
    <div class="row mb-3">
        <div class="col-md-12 text-end">
            <a class="btn btn-success" href="inv-stock-receive-upload">Upload Stock Receive Data</a>
        </div>
    </div>

    @if (receiveData == null)
    {
        <div class="alert alert-info">Loading data...</div>
    }
    else if (!receiveData.Any())
    {
        <div class="alert alert-warning">No data found.</div>
    }
    else
    {
        <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false"
                FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="8" AllowPaging="true"
                PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                Data="@receiveData" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or"
                SelectionMode="DataGridSelectionMode.Single" @bind-Value=@selectedReceiveData>
    <Columns>
        <RadzenDataGridColumn Property="@nameof(InvStockReceiveTemp.Id)" Filterable="false" Title="ID" Width="80px" TextAlign="TextAlign.Center" />
        <RadzenDataGridColumn Property="@nameof(InvStockReceiveTemp.ChallanNo)" Title="Challan No" Width="160px" />
        <RadzenDataGridColumn Property="@nameof(InvStockReceiveTemp.ChallanDate)" Title="Challan Date" FormatString="{0:yyyy-MM-dd}" Width="160px" />
        <RadzenDataGridColumn Property="@nameof(InvStockReceiveTemp.JobNo)" Title="Job No" Width="160px" />
        <RadzenDataGridColumn Property="@nameof(InvStockReceiveTemp.Qty)" Title="Quantity" Width="160px" />
        <RadzenDataGridColumn Property="@nameof(InvStockReceiveTemp.Total)" Title="Total" Width="160px" />
        <RadzenDataGridColumn Property="@nameof(InvStockReceiveTemp.Remarks)" Title="Remarks" Width="200px" />
    </Columns>
</RadzenDataGrid>
    }
</div>







@code {
    //private IList<InvStockReceiveTemp>? stockReceiveList;
    //private IList<InvStockReceiveTemp>? pagedStockReceiveList;

    IQueryable<InvStockReceiveTemp> receiveData;
    IList<InvStockReceiveTemp> selectedReceiveData;

    private int currentPage = 1;
    private int pageSize = 8; // Number of items per page
    private int totalPages;

    protected override async Task OnInitializedAsync()
    {
         await base.OnInitializedAsync();
        receiveData = StockReceiveService.GetAll();

        selectedReceiveData = new List<InvStockReceiveTemp>()
        {
            receiveData.FirstOrDefault()
        };
    }

    


}


